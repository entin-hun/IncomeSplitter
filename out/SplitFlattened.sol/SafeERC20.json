{"abi":[{"type":"error","name":"SafeERC20FailedDecreaseAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"currentAllowance","type":"uint256","internalType":"uint256"},{"name":"requestedDecrease","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"SafeERC20FailedOperation","inputs":[{"name":"token","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a6b8ff7049f0f1bd87aae54426fe01ebb9c1c5fbe56d05f78e57fe42a7694f064736f6c634300081b0033","sourceMap":"14521:5018:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;14521:5018:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a6b8ff7049f0f1bd87aae54426fe01ebb9c1c5fbe56d05f78e57fe42a7694f064736f6c634300081b0033","sourceMap":"14521:5018:0:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flattened/SplitFlattened.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/contracts/lib/chainlink/\",\":@ds-test/=lib/contracts/lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/contracts/lib/seaport/lib/solmate/\",\":@seaport/=lib/contracts/lib/seaport/contracts/\",\":@solady/=lib/contracts/lib/solady/\",\":@std/=lib/contracts/lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/contracts/lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/contracts/lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/contracts/lib/ERC721A/contracts/\",\":chainlink/=lib/contracts/lib/chainlink/contracts/\",\":contracts/=lib/contracts/contracts/\",\":ds-test/=lib/contracts/lib/ds-test/src/\",\":dynamic-contracts/=lib/contracts/lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/contracts/lib/ERC721A-Upgradeable/\",\":erc721a/=lib/contracts/lib/ERC721A/\",\":flattened/=lib/flattened/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/contracts/lib/dynamic-contracts/lib/sstore2/\",\":murky/=lib/contracts/lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/contracts/lib/openzeppelin-contracts/contracts/\",\":seaport-core/=lib/contracts/lib/seaport-core/src/\",\":seaport-sol/=lib/contracts/lib/seaport-sol/src/\",\":seaport-types/=lib/contracts/lib/seaport-types/src/\",\":seaport/=lib/contracts/lib/seaport/\",\":solady/=lib/contracts/lib/solady/src/\",\":solarray/=lib/contracts/lib/seaport/lib/solarray/src/\",\":solmate/=lib/contracts/lib/seaport/lib/solmate/src/\",\":sstore2/=lib/contracts/lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"lib/flattened/SplitFlattened.sol\":{\"keccak256\":\"0x70942b1b4c3f0d780f5e1c12686835c63bb99da844da840d28290316b2f3e97e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9009211d4eb01a6dd38078c2d0ba8e9cd3368f3fc86dfbaa317ff1f241eadc3\",\"dweb:/ipfs/Qmc7DPRsKSXTuHszygYYa1J2J6oAvKwJvHFxHUgbcrJfYX\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"type":"error","name":"SafeERC20FailedDecreaseAllowance"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"type":"error","name":"SafeERC20FailedOperation"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=lib/contracts/lib/chainlink/","@ds-test/=lib/contracts/lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/contracts/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/contracts/lib/seaport/lib/solmate/","@seaport/=lib/contracts/lib/seaport/contracts/","@solady/=lib/contracts/lib/solady/","@std/=lib/contracts/lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/contracts/lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/contracts/lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/contracts/lib/ERC721A/contracts/","chainlink/=lib/contracts/lib/chainlink/contracts/","contracts/=lib/contracts/contracts/","ds-test/=lib/contracts/lib/ds-test/src/","dynamic-contracts/=lib/contracts/lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","erc721a-upgradeable/=lib/contracts/lib/ERC721A-Upgradeable/","erc721a/=lib/contracts/lib/ERC721A/","flattened/=lib/flattened/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/contracts/lib/dynamic-contracts/lib/sstore2/","murky/=lib/contracts/lib/murky/src/","openzeppelin-contracts-upgradeable/=lib/contracts/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/contracts/lib/openzeppelin-contracts/contracts/","seaport-core/=lib/contracts/lib/seaport-core/src/","seaport-sol/=lib/contracts/lib/seaport-sol/src/","seaport-types/=lib/contracts/lib/seaport-types/src/","seaport/=lib/contracts/lib/seaport/","solady/=lib/contracts/lib/solady/src/","solarray/=lib/contracts/lib/seaport/lib/solarray/src/","solmate/=lib/contracts/lib/seaport/lib/solmate/src/","sstore2/=lib/contracts/lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flattened/SplitFlattened.sol":"SafeERC20"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flattened/SplitFlattened.sol":{"keccak256":"0x70942b1b4c3f0d780f5e1c12686835c63bb99da844da840d28290316b2f3e97e","urls":["bzz-raw://f9009211d4eb01a6dd38078c2d0ba8e9cd3368f3fc86dfbaa317ff1f241eadc3","dweb:/ipfs/Qmc7DPRsKSXTuHszygYYa1J2J6oAvKwJvHFxHUgbcrJfYX"],"license":"MIT"}},"version":1},"id":0}